;; From ClutterBox2D

(define-property gravity
  (of-object "ClutterBox2D")
  (prop-type "GParamBoxed")
  (docs "The gravity of ")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property simulating
  (of-object "ClutterBox2D")
  (prop-type "GParamBoolean")
  (docs "Whether ClutterBox2D is performing physical simulation or not.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property scale-factor
  (of-object "ClutterBox2D")
  (prop-type "GParamFloat")
  (docs "The scaling factor of pixels to world units")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property time-step
  (of-object "ClutterBox2D")
  (prop-type "GParamFloat")
  (docs "The amount of time simulated in a physics step, in milliseconds")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property iterations
  (of-object "ClutterBox2D")
  (prop-type "GParamFloat")
  (docs "The amount of iterations in a physics step")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property simulate-inactive
  (of-object "ClutterBox2D")
  (prop-type "GParamBoolean")
  (docs "Whether to simulate inactive bodies")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From ClutterBox2DCollision

;; From ClutterBox2DChild

(define-signal collision
  (of-object "ClutterBox2DChild")
  (return-type "void")
  (when "last")
  (parameters
    '("ClutterBox2DCollision*" "p0")
  )
)

(define-property is-bullet
  (of-object "ClutterBox2DChild")
  (prop-type "GParamBoolean")
  (docs "Whether this object is a bullet (fast moving object that should not be allowed tunneling through other dynamic objects.)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-circle
  (of-object "ClutterBox2DChild")
  (prop-type "GParamBoolean")
  (docs "Whether this object is a circle instead of a rectangle.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property outline
  (of-object "ClutterBox2DChild")
  (prop-type "GParamValueArray")
  (docs "ClutterVertex array describing the outline of the shape.")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property density
  (of-object "ClutterBox2DChild")
  (prop-type "GParamFloat")
  (docs "Density")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property friction
  (of-object "ClutterBox2DChild")
  (prop-type "GParamFloat")
  (docs "Friction")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property restitution
  (of-object "ClutterBox2DChild")
  (prop-type "GParamFloat")
  (docs "Restitution")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property linear-velocity
  (of-object "ClutterBox2DChild")
  (prop-type "GParamBoxed")
  (docs "Linear velocity")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property angular-velocity
  (of-object "ClutterBox2DChild")
  (prop-type "GParamFloat")
  (docs "Angular velocity")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property mode
  (of-object "ClutterBox2DChild")
  (prop-type "GParamInt")
  (docs "The mode of the actor (none, static or dynamic)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property manipulatable
  (of-object "ClutterBox2DChild")
  (prop-type "GParamBoolean")
  (docs "Whether the user is able to interact (using a pointer device) with this actor or not.)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

